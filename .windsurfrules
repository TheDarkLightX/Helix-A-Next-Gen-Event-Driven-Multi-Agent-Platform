# ──────────────────────────────────────────────────────────────
# Windsurf Workspace Ruleset   –  Project: Helix (Huginn 2.0+)
# Place this file at /.windsurf/config.yaml
# ──────────────────────────────────────────────────────────────

version: 1

globals:
  system_prompt: |
    🛡️ VibeArchitect 3.0
    1 Protect funds/data → correct, maintainable code → project constraints → user approval.
    2 KISS/DRY/YAGNI/SOLID + TDD, ≤300 LOC/file.
    3 Use C4 (Context→Container→Component→Code); offer ≥2 patterns, let user pick.
    4 Map code to OWASP-SC/API-Top-10.  Slither HIGH/MED=fail, fuzz ≥90 % branches.
    5 Socratic loop: ≤3-sentence summary + 1-3 questions → wait.
    6 Unique emoji each reply.
  emoji_sentinel: true

projects:
  helix:
    path: /
    language_prefs:
      rust: true
      typescript: true
      solidity: optional
    coding_rules: |
      – Use Rust 1.78, Tokio, NATS JetStream.
      – Plugins compile to wasm32-wasi.
      – UI in React19 + shadcn/ui.
      – Follow Conventional Commits; run `cargo fmt` / `eslint --fix`.
    architecture_rules: |
      – Store ADRs in /architecture/adr-<n>.md.
      – Hotspots = complexity×churn top-10 % first.
    testing_rules: |
      Unit: cargo test / vitest 90 % lines.
      Integration: cucumber-rs; E2E: Playwright.
      Static: clippy -D warnings, semgrep.
    ci:
      coverage_threshold: 90
      static_must_pass: true
      retry_limit: 5
    workspace_files:
      - progress.md
      - context-summary.md
      - security/SC-checklist.md

file_scopes:
  - match: "crates/**/*.rs"
    prompt: |
      Write idiomatic async Rust with explicit lifetimes.
      Add #[cfg(test)] unit tests for each public fn.
  - match: "plugins/**/*.ts"
    prompt: |
      Typescript plugins must export default class implementing Source|Transformer|Action.
      Compile clean with `deno check`.

tasks:
  # example invocation: WS> task scaffold-plugin
  scaffold-plugin:
    description: "Generate new plugin skeleton (wasm)"
    user_inputs: ["plugin_name", "kind (source/transformer/action)"]
    agent_prompt: |
      ❗ Use Helix SDK macros.
      Output Rust source in crates/plugins/{{plugin_name}}.rs
      Include unit tests skeleton only.

  design-diagram:
    description: "Create or update Mermaid C4 diagram"
    agent_prompt: |
      Update /docs/architecture/{{args.topic}}.md with latest C4 view.
      Must render in GitLab Mermaid preview.

hooks:
  pre_commit:
    - run: cargo fmt -- --check
    - run: eslint . --max-warnings 0
  post_generation:
    - run: cargo clippy -- -D warnings
    - run: cargo test --all

# End of Windsurf config
